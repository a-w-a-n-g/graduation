<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:p="http://www.springframework.org/schema/p"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://www.springframework.org/schema/beans">

	<!-- 记得配置AOP或者filter检验是否登录 -->
	
	<!-- 加载配置属性文件，classpath是只检索当前项目的类路径，而classpath*还会检索所依赖的jar中的类路径 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:application.properties" />
	
	<!-- include-filter、exclude-filter中的expression指的是注解所对应的类，而不是扫描的类 -->
	<context:component-scan base-package="com.graduation"></context:component-scan>

	<!-- 定义BasicDataSource数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
  		<property name="driverClassName" value="${jdbc.driver}"></property>
  		<property name="url" value="${jdbc.url}"></property>
  		<property name="username" value="${jdbc.username}"></property>
  		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 将上面定义的数据源dataSource注入到LocalSessionFactoryBean类的sessionFactory属性 -->
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<!-- 这里是在此处配置Hibernate的相关属性, 还可以通过configLocation来设置hibernate的配置文件所在 -->
		<property name="hibernateProperties">
			<props>
				<!-- 设置Hibernate的数据库方言 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- 为了能使用sessionFactory的getCurrentSession方法，需要配置下属性 -->
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<!-- 用于格式化控制台输出的sql语句 -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- create:启动时先drop、再create；create-drop:启动时也create，但是系统关闭前会drop；
				update：启动时检查结构是否一致，若不一致更新结构；validate：当结构不一致时只报错。 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.graduation.hibernate.entity.Administrator</value>
				<value>com.graduation.hibernate.entity.ClassNum</value>
				<value>com.graduation.hibernate.entity.Department</value>
				<value>com.graduation.hibernate.entity.LoginLog</value>
				<value>com.graduation.hibernate.entity.Major</value>
				<value>com.graduation.hibernate.entity.ModifyTopic</value>
				<value>com.graduation.hibernate.entity.Notice</value>
				<value>com.graduation.hibernate.entity.Student</value>
				<value>com.graduation.hibernate.entity.Teacher</value>
				<value>com.graduation.hibernate.entity.Topic</value>
				<value>com.graduation.hibernate.entity.Description</value>
				<value>com.graduation.hibernate.entity.Bernal</value>
				<value>com.graduation.hibernate.entity.InterimReport</value>
				<value>com.graduation.hibernate.entity.GuidanceRecord</value>
				<value>com.graduation.hibernate.entity.ThesisPaper</value>
			</list>
		</property>
	</bean>

</beans>